/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.54
 * Generated at: 2019-10-09 16:36:51 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import com.nortel.applications.ccmm.ci.datatypes.*;
import com.nortel.applications.ccmm.ci.webservices.*;

public final class hidden_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<HTML>\r\n");
      out.write("\r\n");
      out.write("  <HEAD>\r\n");
      out.write("     <meta http-equiv=\"refresh\" content=\"3\">\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write(" \t<script language=\"JavaScript\">\r\n");
      out.write("\r\n");
      out.write("\t   String.prototype.trim = function() \r\n");
      out.write("\t   {\r\n");
      out.write("\r\n");
      out.write("\t\t // skip leading and trailing whitespace\r\n");
      out.write("\t\t // and return everything in between\r\n");
      out.write("\t\t  var x=this;\r\n");
      out.write("\t\t  x=x.replace(/^\\s*(.*)/, \"$1\");\r\n");
      out.write("\t\t  x=x.replace(/(.*?)\\s*$/, \"$1\");\r\n");
      out.write("\t\t  return x;\r\n");
      out.write("\t   }\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t   function giveWebOnHold()\r\n");
      out.write("\t   \r\n");
      out.write("\t   {\r\n");
      out.write("\t   \r\n");
      out.write("\t   \t// If we are already in Web On Hold, do nothing\r\n");
      out.write("\t   \t// otherwise redirect our browser to onhold.jsp\r\n");
      out.write("\t   \r\n");
      out.write("\t   \tparent.statuscontrol.document.statusform.inSession.value = \"0\";\r\n");
      out.write("\r\n");
      out.write("\t\tvar theurl = \"\"; \r\n");
      out.write("\r\n");
      out.write("\t\ttheurl = '' + parent.maincontrol.location\r\n");
      out.write("\r\n");
      out.write("\t   \tif(document.all)\r\n");
      out.write("\t   \t{\r\n");
      out.write("\t   \t\t// Internet Explorer (all versions)\r\n");
      out.write("\r\n");
      out.write("\t\t\tif(theurl.indexOf(\"top.jsp\") > 0)\r\n");
      out.write("\t\t\t{\r\n");
      out.write("\t\t\t\tparent.maincontrol.location = 'onhold.jsp';\r\n");
      out.write("\t\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\telse\r\n");
      out.write("\t\t{\r\n");
      out.write("\t\t\t// Netscape (all versions)\r\n");
      out.write("\t\t\tif(theurl.indexOf(\"top.jsp\") > 0)\r\n");
      out.write("\t\t\t{\r\n");
      out.write("\t\t\t\tparent.maincontrol.location.href = 'onhold.jsp';\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\r\n");
      out.write("\t   }\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t   function giveChatTreatment()\r\n");
      out.write("\t   {\r\n");
      out.write("\t   \r\n");
      out.write("\t   \t// We have retrieved message(s) from our session. Navigate away\r\n");
      out.write("\t   \t// from Web On Hold to the inchat.jsp page\r\n");
      out.write("\t   \r\n");
      out.write("\t\tvar theurl = \"\"; \r\n");
      out.write("\t\ttheurl = '' + parent.maincontrol.location\r\n");
      out.write("\t\tparent.statuscontrol.document.statusform.status.value = \"Status: Active\";\r\n");
      out.write("\t\tparent.statuscontrol.document.statusform.inSession.value = \"1\";\r\n");
      out.write("\r\n");
      out.write("\t\tif(theurl.indexOf(\"inchat.jsp\") == -1)\r\n");
      out.write("\t\t{\r\n");
      out.write("\t\t\tparent.maincontrol.location = 'inchat.jsp'\r\n");
      out.write("\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t        parent.statuscontrol.document.statusform.expectedWaitTime.value = \"\"\r\n");
      out.write("        \tparent.statuscontrol.document.statusform.positionInQueue.value =  \"\"\r\n");
      out.write(" \r\n");
      out.write("\t   }\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("         function setfocus()\r\n");
      out.write("         {\r\n");
      out.write("      \t\tparent.chatwrite.document.chatform.customerchat.focus();\r\n");
      out.write("         }\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t   function displayPushedPage( str )\r\n");
      out.write("\t   {\r\n");
      out.write("\t   \r\n");
      out.write("\t   \tif(document.all)\r\n");
      out.write("\t   \t{\r\n");
      out.write("\t   \t\t// Internet Explorer (all versions)\r\n");
      out.write("\r\n");
      out.write("\t\t\tvar theurl = \"\"; \r\n");
      out.write("\t\t\ttheurl = '' + parent.maincontrol.location;\r\n");
      out.write("\t\t\tparent.statuscontrol.document.statusform.inSession.value = \"1\";\r\n");
      out.write("\t\t\tparent.maincontrol.location = str;\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\telse\r\n");
      out.write("\t\t{\r\n");
      out.write("\t\t\t// Netscape (all versions)\r\n");
      out.write("\t\t\tparent.statuscontrol.document.statusform.inSession.value = \"1\";\r\n");
      out.write("\t\t\tparent.maincontrol.location.href = str;\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t   }\r\n");
      out.write("\t   \r\n");
      out.write("\t   \r\n");
      out.write("\t   function changeContent(id,shtml) \r\n");
      out.write("\t   {\r\n");
      out.write("\t   \r\n");
      out.write("\t      if (parent.chatdisplay.document.getElementById || parent.chatdisplay.document.all) \r\n");
      out.write("\t      {\r\n");
      out.write("\t         var el = parent.chatdisplay.document.getElementById? parent.chatdisplay.document.getElementById(id): parent.chatdisplay.document.all[id];\r\n");
      out.write("\t         if (el && typeof el.innerHTML != \"undefined\") el.innerHTML = unescape(shtml);\r\n");
      out.write("\t      }\r\n");
      out.write("\t      \r\n");
      out.write("\t   }\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("        </script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("  </HEAD>\r\n");
      out.write("  <body onload=setfocus()>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("  <FORM name=hiddenForm>\r\n");
      out.write("\r\n");
      out.write("\r\n");


   //Avaya Aura Contact Center Multimedia 
   //Copyright ï¿½ 2010 Avaya Inc. All Rights Reserved


String 		strMessage="";
String 		allMessages = "";
String 		lastPageActionUrl = "";
String 		sessionKey;
String 		contactID;
String 		pushUrl="";
int 			length = 0;
boolean		isWriting=false;
String		currentWriteMessage="";
boolean		lastPageActivityByCustomer=true;
boolean		foundQueueInfoFields=false;

String strExpectedWaitTime = "";
String strPositionInQueue = "";
int iExpectedWaitTime = 0;
int iMins = 0;
int iSecs = 0;


String ccmmHostname  = application.getInitParameter("CCMM_HOSTNAME");

request.setCharacterEncoding("utf-8");
sessionKey=request.getParameter("sessionKey");
contactID=request.getParameter("contactID");



// This page refreshes every 3 seconds. Its purpose is to check for new messages from
// the agent. When it retrieves a message, it must distinguish its type i.e. a chat message,
// page push etc. and react to it. Additionally, it notifies the customer if the agent is 
// currently writing a message.


java.util.GregorianCalendar gCalendar = new java.util.GregorianCalendar(2006, 1, 1, 12, 0, 0 );

CIDateTime tm = new CIDateTime();
tm.setMilliseconds(gCalendar.getTimeInMillis());

java.net.URL ciWebCommsWsUrlHidden = new java.net.URL("http://" + ccmmHostname + "/ccmmwebservices/CIWebCommsWs.asmx"); 

CIWebCommsWs webCommsWsLocatorHidden = new CIWebCommsWsLocator();
CIWebCommsWsSoap webCommsWsHidden = webCommsWsLocatorHidden.getCIWebCommsWsSoap( ciWebCommsWsUrlHidden );




CIMultipleChatMessageReadType chatMessages = new CIMultipleChatMessageReadType();

chatMessages = webCommsWsHidden.readChatMessage(new Long(contactID).longValue(), tm, false, sessionKey);



if(chatMessages.isIsWriting())
{
   
      out.write("<script language=\"Javascript\">\r\n");
      out.write("       parent.statuscontrol.document.statusform.isWriting.value = \"Agent is writing a message....\";      \r\n");
      out.write("  </script>");

}
else
{
   
      out.write("<script language=\"Javascript\">\r\n");
      out.write("       parent.statuscontrol.document.statusform.isWriting.value = \"\";\r\n");
      out.write("  </script>");

}


CIChatMessageReadType[] arrayOfMessages = chatMessages.getListOfChatMessages();

if(arrayOfMessages != null)
{
	
     length = arrayOfMessages.length;
	 
     CIChatMessageType lastPageActionType;

     int i;
     for(i=0; i<length; i++)
     {

     	String lastMessage = arrayOfMessages[i].getChatMessage();
     	
	lastPageActionType = arrayOfMessages[i].getChatMessageType();

	if (lastPageActionType == CIChatMessageType.Page_Pushed_by_Customer) 
	{
		allMessages = allMessages + "<br><font color=black>" + lastMessage;
		lastPageActionUrl = arrayOfMessages[i].getHiddenMessage(); 
		lastPageActivityByCustomer = true;
	}
       	else if (lastPageActionType == CIChatMessageType.Page_Pushed_by_Agent)
	{
		allMessages = allMessages + "<br><font color=CC0000>" + lastMessage;
		lastPageActionUrl = arrayOfMessages[i].getHiddenMessage(); 
		lastPageActivityByCustomer = false;
	}
    	else if (lastPageActionType == CIChatMessageType.Form_Shared_by_Customer)
	{  	
		allMessages = allMessages + "<br><font color=black>" + lastMessage;
		lastPageActionUrl = arrayOfMessages[i].getHiddenMessage(); 
		lastPageActivityByCustomer = true;
	}
      	else if (lastPageActionType == CIChatMessageType.Form_Shared_by_Agent)
	{ 	
		allMessages = allMessages + "<br><font color=CC0000>" + lastMessage;
		lastPageActionUrl = arrayOfMessages[i].getHiddenMessage(); 
		lastPageActivityByCustomer = false;
	}
       	else if (lastPageActionType == CIChatMessageType.Page_Previewed_by_Customer)
	{
		allMessages = allMessages + "<br><font color=black>" + lastMessage;
		lastPageActionUrl = arrayOfMessages[i].getHiddenMessage(); 
		lastPageActivityByCustomer = true;
        }
       	else if (lastPageActionType == CIChatMessageType.Chat_Message_from_Customer)
	{
		// the message from the customer will have html tags invalidated so that they render rather than are intrepreted
		allMessages = allMessages + "<br><font color=black>" + lastMessage.replaceAll("<","< ");
        }
       	else if (lastPageActionType == CIChatMessageType.Chat_Message_from_Agent)
	{
		// the message from the agent will have html tags invalidated so that they render rather than are intrepreted
		allMessages = allMessages + "<br><font color=CC0000>" + lastMessage.replaceAll("<","< ");
        }
       	else if (lastPageActionType == CIChatMessageType.CallMe_Request_from_Customer)
	{
		allMessages = allMessages + "<br><font color=black>" + lastMessage;
        }
        
        
        // we now escape all characters
        allMessages = allMessages.replaceAll("\"","&quot;");
        
        

     }

     // when the first message is recieved from the agent, produce an audible alert
     if(i==1)
     {
	
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t   <script language=\"JavaScript\">\r\n");
      out.write("\t   if(parent.statuscontrol.document.statusform.inSession.value == \"0\")\r\n");
      out.write("\t   {\r\n");
      out.write("             document.write(\"<bgsound src=\" + \"../sounds/Bell.wav\" +\" volume=\" +\"-1000\" +\"></bgsound>\");\r\n");
      out.write("\r\n");
      out.write("\t   }\r\n");
      out.write("\r\n");
      out.write("\t   </script>\r\n");
      out.write("\t");

     }

     
      out.write("\r\n");
      out.write("\r\n");
      out.write("     <input type=\"hidden\" name=\"theReadMessage\" value=\"");
      out.print(allMessages);
      out.write("\">\r\n");
      out.write("     <input type=\"hidden\" name=\"thePushedPage\" value=\"");
      out.print(lastPageActionUrl);
      out.write("\">\r\n");
      out.write("     <input type=\"hidden\" name=\"msgCount\" value=\"");
      out.print(i);
      out.write("\">\r\n");
      out.write("\r\n");
      out.write("     <script language=\"JavaScript\">\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("     if(parent.wcControl.document.hiddenForm.theReadMessage.value != \"\")\r\n");
      out.write("     {\r\n");
      out.write("\t\tif (parent.wcControl.document.hiddenForm.thePushedPage.value == \"\")\r\n");
      out.write("\t\t{\r\n");
      out.write("\t\t\tgiveChatTreatment();\r\n");
      out.write("\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\telse\r\n");
      out.write("\t\t{\r\n");
      out.write("\t\t\tvar t = parent.chatdisplay.document.getElementById('chatterbox').innerHTML;\r\n");
      out.write("\t\t\tvar lastHttpPos = t.lastIndexOf(\"http\");\t\t\t\r\n");
      out.write("\t\t\tvar pushedUrlPos = t.indexOf(parent.wcControl.document.hiddenForm.thePushedPage.value, lastHttpPos);\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\tif (pushedUrlPos > -1) \r\n");
      out.write("\t\t\t{\r\n");
      out.write("\t\t\t\t// do nothing as the page is already loaded\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\telse\r\n");
      out.write("\t\t\t{\r\n");
      out.write("\t\t\t\t// page is not currently loaded\r\n");
      out.write("\t\t\t\tdisplayPushedPage(parent.wcControl.document.hiddenForm.thePushedPage.value);\r\n");
      out.write("\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("  \r\n");
      out.write("\t\tchangeContent(\"chatterbox\",escape(parent.wcControl.document.hiddenForm.theReadMessage.value) + \"<br><a id=endOfStream></a>\");\r\n");
      out.write("\t\tparent.chatdisplay.document.getElementById('endOfStream').scrollIntoView(false);  \r\n");
      out.write("\t\t\t\r\n");
      out.write("\r\n");
      out.write("     }\r\n");
      out.write("     </script> \r\n");
      out.write("\r\n");
      out.write("     ");

}
else
{

     // no messages yet, agent has not joined
	 

    java.net.URL ciContactWsUrlHidden = new java.net.URL("http://" + ccmmHostname + "/ccmmwebservices/CIContactWs.asmx"); 
    CIContactWs ciContactWsLocatorHidden = new CIContactWsLocator();
    CIContactWsSoap contactWsHidden = ciContactWsLocatorHidden.getCIContactWsSoap( ciContactWsUrlHidden );


    CIContactReadType theContact = new CIContactReadType();
    theContact = contactWsHidden.readContact(new Long(contactID).longValue(), sessionKey);
    
    if (theContact.getCustomFieldList() != null)
    {

    	for( int i=0; i < theContact.getCustomFieldList().length; i++ )
    	{
   		if( theContact.getCustomFieldList()[i].getName().equals("Expected Wait Time") )
    		{
    			foundQueueInfoFields = true;
        		strExpectedWaitTime = theContact.getCustomFieldList()[i].getText();
        		iExpectedWaitTime = new Integer(strExpectedWaitTime).intValue();
    		    	if(iExpectedWaitTime > 60)
    		    	{
				iSecs = (iExpectedWaitTime % 60);
    		    		iMins = (iExpectedWaitTime / 60) ;
	
			}
			else
			{
    		    		iMins = 0;
				iSecs = iExpectedWaitTime;		
			}
    		}
    
    		if( theContact.getCustomFieldList()[i].getName().equals("Position In Queue") )
    		{
    			foundQueueInfoFields = true;
    		    	strPositionInQueue = theContact.getCustomFieldList()[i].getText();
    		}
    	}

    	if( strExpectedWaitTime.equals("0") )
    	{
	
	
		
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("\t\t<input type=hidden name=iMins value=");
      out.print(iMins);
      out.write(">\r\n");
      out.write("\t\t<input type=hidden name=iSecs value=");
      out.print(iSecs);
      out.write(">\r\n");
      out.write("\t\r\n");
      out.write("\t\t<script language=\"javascript\">\r\n");
      out.write("\t\r\n");
      out.write("\t\t   parent.statuscontrol.document.statusform.expectedWaitTime.value = \"Expected Wait Time : \"\r\n");
      out.write("\t\t   parent.statuscontrol.document.statusform.positionInQueue.value =  \"Position In Queue  : \" + ");
      out.print(strPositionInQueue);
      out.write("\r\n");
      out.write("   \r\n");
      out.write("\t\t</script>\r\n");
      out.write("\r\n");
      out.write("\t\t");


    	}
    	else if( foundQueueInfoFields )
    	{

		
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t\t<script language=\"javascript\">\r\n");
      out.write("\r\n");
      out.write("\t\t   parent.statuscontrol.document.statusform.expectedWaitTime.value = \"Expected Wait Time : \" + ");
      out.print(iMins);
      out.write(" + \" m \" + ");
      out.print(iSecs);
      out.write(" + \" s\"\r\n");
      out.write("\t\t   parent.statuscontrol.document.statusform.positionInQueue.value =  \"Position In Queue  : \" + ");
      out.print(strPositionInQueue);
      out.write("\r\n");
      out.write("   \r\n");
      out.write("\t\t</script>\r\n");
      out.write("\r\n");
      out.write("\t\t");


    	}
    }


     
      out.write("\r\n");
      out.write("     <script language=\"JavaScript\">\r\n");
      out.write("\tgiveWebOnHold();\r\n");
      out.write("     </script>\r\n");
      out.write("     ");


            
}



      out.write("\r\n");
      out.write("\r\n");
      out.write("</form>\r\n");
      out.write("</BODY>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
