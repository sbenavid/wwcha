/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.54
 * Generated at: 2019-10-09 16:40:38 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.include;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class main_005fpre_005fbody_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\r\n");
      out.write("//\tGlobally used functions\r\n");
      out.write("\r\n");
      out.write("function sound(surl)\r\n");
      out.write("{\r\n");
      out.write("\tdocument.getElementById(\"NewMessageBeepHolder\").innerHTML = \"<embed src=\\\"\"+surl+\"\\\" hidden=\\\"true\\\" autostart=\\\"true\\\" loop=\\\"false\\\" />\";\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("//\tResize pop-up according to browser used, and by possible extending length\r\n");
      out.write("function resizeWindow(ffPixelWidth, crPixelWidth, iePixelWidth, ffPixelLength, crPixelLength, iePixelLength, extendLength)\r\n");
      out.write("{\r\n");
      out.write("\tif (/Firefox[\\/\\s](\\d+\\.\\d+)/.test(navigator.userAgent))\r\n");
      out.write("\t\twindow.resizeTo(ffPixelWidth, ffPixelLength + extendLength);\t//\tFirefox\r\n");
      out.write("\telse if(navigator.userAgent.indexOf(\"Chrome\") != -1)\r\n");
      out.write("\t\twindow.resizeTo(crPixelWidth, crPixelLength + extendLength);\t//\tChrome\r\n");
      out.write("\telse if(navigator.appName == \"Microsoft Internet Explorer\")\r\n");
      out.write("\t{\r\n");
      out.write("\t\textendLength -= extendLength/14;\r\n");
      out.write("\t\twindow.resizeTo(iePixelWidth, iePixelLength + extendLength);\t//\tIE\r\n");
      out.write("\t}\r\n");
      out.write("\telse \r\n");
      out.write("\t\twindow.resizeTo(iePixelWidth, iePixelLength + extendLength);\t//\tResize others as of IE\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("//\tWhitespace removal functions:\r\n");
      out.write("//\tAt source\r\n");
      out.write("function checkSpace(event)\r\n");
      out.write("{ \t\r\n");
      out.write("\treturn event.which !== 32;\r\n");
      out.write("}\r\n");
      out.write("//\tIn string\r\n");
      out.write("function whitespaceTrim(str)\r\n");
      out.write("{\r\n");
      out.write("\treturn str.replace(/\\s+/g,'');\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("//\tCheck for valid email address\r\n");
      out.write("function isValidEmailAddress(str)\r\n");
      out.write("{  \r\n");
      out.write("\tvar at=\"@\";\r\n");
      out.write("\tvar dot=\".\";\r\n");
      out.write("\tvar lat=str.indexOf(at);\r\n");
      out.write("\tvar lstr=str.length;\r\n");
      out.write("\tvar ldot=str.indexOf(dot);\r\n");
      out.write("\r\n");
      out.write("\t//\tIf string contains whitespace, trim\r\n");
      out.write("\tstr = whitespaceTrim(str);\r\n");
      out.write("\r\n");
      out.write("\tif (str.indexOf(at)==-1)\r\n");
      out.write("\t{\r\n");
      out.write("\t\treturn false;\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\tif (str.indexOf(at)==-1 || str.indexOf(at)==0 || str.indexOf(at)==lstr)\r\n");
      out.write("\t{\r\n");
      out.write("\t\treturn false;\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\tif (str.indexOf(dot)==-1 || str.indexOf(dot)==0 || str.indexOf(dot)==(lstr-1))\r\n");
      out.write("\t{\r\n");
      out.write("\t\treturn false;\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\tif (str.indexOf(at,(lat+1))!=-1)\r\n");
      out.write("\t{\r\n");
      out.write("\t\treturn false;\r\n");
      out.write("\t} \r\n");
      out.write("\r\n");
      out.write("\tif (str.substring(lat-1,lat)==dot || str.substring(lat+1,lat+2)==dot)\r\n");
      out.write("\t{\r\n");
      out.write("\t\treturn false;\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\tif (str.indexOf(dot,(lat+2))==-1)\r\n");
      out.write("\t{\r\n");
      out.write("\t\treturn false;\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\tif (str.indexOf(\" \")!=-1)\r\n");
      out.write("\t{\r\n");
      out.write("\t\treturn false;\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\treturn true;\t\t\t\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("//\tCheck for valid phone number\r\n");
      out.write("function isValidPhoneNumber(str)\r\n");
      out.write("{\r\n");
      out.write("\t\tvar validCharacters = \"0123456789\";\r\n");
      out.write("\r\n");
      out.write("\t\t//\tIf string contains whitespace, trim\r\n");
      out.write("\t\tstr = whitespaceTrim(str);\r\n");
      out.write("\r\n");
      out.write("\t\tfor (i = 0; i < str.length; i++) \r\n");
      out.write("\t\t{ \r\n");
      out.write("\t\t\tif (validCharacters.indexOf(str.charAt(i)) == -1) \r\n");
      out.write("\t\t\t{\r\n");
      out.write("\t\t\t\treturn false;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\treturn true;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("</script>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
